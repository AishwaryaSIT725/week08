name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  validate-services:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Use your real paths
        service: [ backend/product-service, backend/order-service, frontend ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (A) Optional: If Python service, install deps just to validate requirements
      - name: Detect service type
        id: detect
        run: |
          SVC="${{ matrix.service }}"
          if [ -f "$SVC/requirements.txt" ]; then
            echo "py=1" >> $GITHUB_OUTPUT
          else
            echo "py=0" >> $GITHUB_OUTPUT
          fi
          if [ -f "$SVC/package.json" ]; then
            echo "node=1" >> $GITHUB_OUTPUT
          else
            echo "node=0" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python (if Python service)
        if: steps.detect.outputs.py == '1'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python deps (if Python service)
        if: steps.detect.outputs.py == '1'
        run: |
          cd ${{ matrix.service }}
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # (B) Universal: build the Docker image (no push, no secrets)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (no push)
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service }}
          push: false
          tags: temp/${{ matrix.service }}:ci
